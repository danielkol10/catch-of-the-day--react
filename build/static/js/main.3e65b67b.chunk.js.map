{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","className","onSubmit","this","ref","type","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","component","name","price","onClick","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","console","log","updatedFish","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","async","fetch","storeId","context","store","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","handleClick","addToOrder","details","src","alt","disabled","App","Date","now","sampleFishes","localStorageRef","localStorage","getItem","match","params","JSON","parse","syncState","setItem","stringify","removeBinding","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.3e65b67b.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getFunName } from \"../helpers\";\n\nclass StorePicker extends React.Component {\n  static propTypes = {\n    history: PropTypes.object\n  };\n\n  myInput = React.createRef();\n  // constructor() {\n  //   super();\n  //   // bind goToStore so that it refers to the StorePicker instance\n  //   this.goToStore = this.goToStore.bind(this);\n  // }\n  // creating a ref\n  // make go to store as a property of the class syntax\n  goToStore = event => {\n    // 1) stop the form from auto submit\n    event.preventDefault();\n    // 2) get the text from that input\n    const storeName = this.myInput.current.value; // .current is react reference, .value is js method\n    // 3) change the url to the input\n    this.props.history.push(`/store/${storeName}`);\n  };\n  render() {\n    return (\n      <form className=\"store-selector\" onSubmit={this.goToStore}>\n        {/* comments */}\n        <h2>Please Enter A store</h2>\n        <input\n          ref={this.myInput}\n          type=\"text\"\n          required\n          placeholder=\"Store Name\"\n          defaultValue={getFunName()}\n        />\n        <button type=\"submit\">Visit Store =></button>\n      </form>\n    );\n  }\n}\nexport default StorePicker;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Header = props => (\n  <header className=\"top\">\n    <h1>\n      Catch{\" \"}\n      <span className=\"ofThe\">\n        <span className=\"of\">Of</span>\n        <span className=\"the\">The</span>\n      </span>{\" \"}\n      day\n    </h1>\n    <h3 className=\"tagline\">\n      <span>{props.tagline}</span>\n    </h3>\n  </header>\n);\n\nHeader.propTypes = {\n  tagline: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from \"../helpers\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nclass Order extends Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    order: PropTypes.object,\n    removeFromOrder: PropTypes.func\n  };\n\n  renderOrder = key => {\n    const fish = this.props.fishes[key];\n    const count = this.props.order[key];\n    const isAvailable = fish && fish.status === \"available\";\n    const transitionOptions = {\n      classNames: \"order\",\n      key: key,\n      timeout: { enter: 500, exit: 500 }\n    };\n\n    // make sure the fish is loaded before we continue\n    if (!fish) {\n      return null;\n    }\n\n    if (!isAvailable) {\n      return (\n        <CSSTransition {...transitionOptions}>\n          <li key={key}>\n            sorry {fish ? fish.name : \"fish\"} is no longer available\n          </li>\n        </CSSTransition>\n      );\n    }\n\n    return (\n      <CSSTransition {...transitionOptions}>\n        <li key={key}>\n          <span>\n            <TransitionGroup component=\"span\" className=\"count\">\n              <CSSTransition\n                classNames=\"count\"\n                key={count}\n                timeout={{ enter: 500, exit: 500 }}\n              >\n                <span>{count}</span>\n              </CSSTransition>\n            </TransitionGroup>\n            lbs {fish.name}\n            {formatPrice(count * fish.price)}\n            <button onClick={() => this.props.removeFromOrder(key)}>\n              &times;\n            </button>\n          </span>\n        </li>\n      </CSSTransition>\n    );\n  };\n\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const fish = this.props.fishes[key];\n      const count = this.props.order[key];\n      const isAvailable = fish && fish.status === \"available\";\n      if (isAvailable) {\n        return prevTotal + count * fish.price;\n      }\n      return prevTotal;\n    }, 0);\n\n    return (\n      <div className=\"order-wrap\">\n        <h2>Order</h2>\n        <TransitionGroup component=\"ul\" className=\"order\">\n          {orderIds.map(this.renderOrder)}\n        </TransitionGroup>\n\n        <div className=\"total\">\n          Total:\n          <strong>{formatPrice(total)}</strong>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Order;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nclass AddFishForm extends Component {\n  nameRef = React.createRef();\n  priceRef = React.createRef();\n  statusRef = React.createRef();\n  descRef = React.createRef();\n  imageRef = React.createRef();\n\n  static propTypes = {\n    addFish: PropTypes.func\n  };\n\n  createFish = event => {\n    // 1) stop the form from submitting\n    event.preventDefault();\n    const fish = {\n      name: this.nameRef.current.value,\n      price: parseFloat(this.priceRef.current.value), // 109.252\n      status: this.statusRef.current.value,\n      desc: this.descRef.current.value,\n      image: this.imageRef.current.value\n    };\n    this.props.addFish(fish);\n    // refresh the form\n    event.currentTarget.reset();\n  };\n\n  render() {\n    return (\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\n        <input ref={this.nameRef} type=\"text\" name=\"name\" placeholder=\"Name\" />\n        <input\n          ref={this.priceRef}\n          type=\"text\"\n          name=\"price\"\n          placeholder=\"Price\"\n        />\n        <select ref={this.statusRef} name=\"status\">\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea ref={this.descRef} name=\"desc\" placeholder=\"Desc\" />\n        <input\n          ref={this.imageRef}\n          type=\"text\"\n          name=\"image\"\n          placeholder=\"Image\"\n        />\n        <button type=\"submit\">+ Add Fish</button>\n      </form>\n    );\n  }\n}\n\nexport default AddFishForm;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass EditFishForm extends Component {\n  static propTypes = {\n    fish: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number\n    }),\n    index: PropTypes.string,\n    updateFish: PropTypes.func\n  };\n\n  handleChange = event => {\n    console.log(event.currentTarget.value);\n    // update that fish\n    // 1. take a copy of the current fish\n    const updatedFish = {\n      ...this.props.fish,\n      [event.currentTarget.name]: event.currentTarget.value\n    };\n    this.props.updateFish(this.props.index, updatedFish);\n  };\n  render() {\n    return (\n      <div className=\"fish-edit\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          onChange={this.handleChange}\n          value={this.props.fish.name}\n        />\n        <input\n          type=\"text\"\n          name=\"price\"\n          onChange={this.handleChange}\n          value={this.props.fish.price}\n        />\n        <select\n          type=\"text\"\n          name=\"status\"\n          onChange={this.handleChange}\n          value={this.props.fish.status}\n        >\n          <option\n            onChange={this.handleChange}\n            value=\"available\"\n            className=\"available\"\n          >\n            Fresh!\n          </option>\n          <option\n            onChange={this.handleChange}\n            value=\"unavailable\"\n            className=\"unavailable\"\n          >\n            Sold Out!\n          </option>\n        </select>\n        <textarea\n          name=\"desc\"\n          onChange={this.handleChange}\n          value={this.props.fish.desc}\n        />\n        <input\n          type=\"text\"\n          name=\"image\"\n          onChange={this.handleChange}\n          value={this.props.fish.image}\n        />\n        <button onClick={() => this.props.deleteFish(this.props.index)}>\n          Remove Fish\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default EditFishForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Login = props => (\n  <nav className=\"login\">\n    <h2>Inventory Login</h2>\n    <p>Sign in to manage your store's inventory.</p>\n    <button className=\"github\" onClick={() => props.authenticate(\"Github\")}>\n      Log In With GitHub\n    </button>\n    <button className=\"facebook\" onClick={() => props.authenticate(\"Facebook\")}>\n      Log In With Facebook\n    </button>\n  </nav>\n);\n\nLogin.propTypes = {\n  authenticate: PropTypes.func.isRequired\n};\n\nexport default Login;\n","import Rebase from \"re-base\";\nimport firebase from \"firebase\";\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyA3bQDN73jfWjG3e2unwOKT_LSI204NVqY\",\n  authDomain: \"catch-o-the-day-c2994.firebaseapp.com\",\n  databaseURL: \"https://catch-o-the-day-c2994.firebaseio.com\"\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\n// This is a named export\nexport { firebaseApp };\n\n// this is a default export\nexport default base;\n","import React, { Component } from \"react\";\nimport firebase from \"firebase\";\nimport PropTypes from \"prop-types\";\nimport AddFishForm from \"./AddFishForm\";\nimport EditFishForm from \"./EditFishForm\";\nimport Login from \"./Login\";\nimport base, { firebaseApp } from \"../base\"; // import both named and default exports\n\nclass Inventory extends Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    updateFish: PropTypes.func,\n    deleteFish: PropTypes.func,\n    loadSampleFishes: PropTypes.func\n  };\n\n  state = {\n    uid: null,\n    owner: null\n  };\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.authHandler({ user });\n      }\n    });\n  }\n\n  authHandler = async authData => {\n    // 1. look up the current store in the firebase db\n    const store = await base.fetch(this.props.storeId, { context: this });\n    // 2. claim it if there is no owner\n    if (!store.owner) {\n      // save it as or own\n      await base.post(`${this.props.storeId}/owner`, {\n        data: authData.user.uid\n      });\n    }\n    // 3. set the state of the inventory component to reflect the current user\n    this.setState({\n      uid: authData.user.uid,\n      owner: store.owner || authData.user.uid\n    });\n  };\n\n  authenticate = provider => {\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n    firebaseApp\n      .auth()\n      .signInWithPopup(authProvider)\n      .then(this.authHandler);\n  };\n\n  logout = async () => {\n    console.log(\"logigng out\");\n    await firebase.auth().signOut();\n    this.setState({ uid: null });\n  };\n\n  render() {\n    const logout = <button onClick={this.logout}>log out</button>;\n\n    // 1. check if they are logged in\n    if (!this.state.uid) {\n      return <Login authenticate={this.authenticate} />;\n    }\n    // 2. check if they are not the owner of the store\n    if (this.state.uid !== this.state.owner) {\n      return (\n        <div>\n          <p> Sorry you are not the owner </p>\n          {logout}\n        </div>\n      );\n    }\n    // 3. they must be the owner, render the inventory\n\n    return (\n      <div className=\"inventory\">\n        <h2>Inventory</h2>\n        {logout}\n        {Object.keys(this.props.fishes).map(key => (\n          <EditFishForm\n            key={key}\n            index={key}\n            fish={this.props.fishes[key]}\n            updateFish={this.props.updateFish}\n            deleteFish={this.props.deleteFish}\n          ></EditFishForm>\n        ))}\n        <AddFishForm addFish={this.props.addFish}></AddFishForm>\n        <button onClick={this.props.loadSampleFishes}>\n          Load Sample Fishes\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Inventory;\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from \"../helpers\";\nclass Fish extends Component {\n  static propTypes = {\n    // when writing props, you need to add a propType\n    // shape is function that takes an object\n    details: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number\n    }),\n    addToOrder: PropTypes.func\n  };\n\n  // methods\n  handleClick = () => {\n    this.props.addToOrder(this.props.index); // add to order with the id of the fish\n  };\n\n  render() {\n    // destructure optional, take variables on the left and store whats right\n    const { image, name, price, desc, status } = this.props.details;\n    const isAvailable = status === \"available\";\n    return (\n      <li className=\"menu-fish\">\n        <img src={image} alt={name} />\n        <h3 className=\"fishname\">\n          {name}\n          <span className=\"price\">{formatPrice(price)}</span>\n        </h3>\n        <p>{desc}</p>\n        {/* disable button if fish is not available */}\n        <button disabled={!isAvailable} onClick={this.handleClick}>\n          {isAvailable ? \"Add To Order\" : \"Sold Out!\"}\n        </button>\n      </li>\n    );\n  }\n}\n\nexport default Fish;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Header from \"./Header\";\nimport Order from \"./Order\";\nimport Inventory from \"./Inventory\";\nimport sampleFishes from \"../sample-fishes\";\nimport Fish from \"./Fish\";\nimport base from \"../base\";\n\n// cc to import class\n// imr to import react\n\nclass App extends React.Component {\n  // state\n  state = {\n    fishes: {},\n    order: {}\n  };\n\n  static propTypes = {\n    match: PropTypes.object\n  };\n\n  componentDidMount() {\n    // first reinstate our localStorage\n    const localStorageRef = localStorage.getItem(\n      this.props.match.params.storeId\n    );\n    if (localStorageRef) {\n      this.setState({ order: JSON.parse(localStorageRef) });\n    }\n\n    this.ref = base.syncState(`${this.props.match.params.storeId}/fishes`, {\n      context: this,\n      state: \"fishes\"\n    });\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem(\n      this.props.match.params.storeId,\n      JSON.stringify(this.state.order)\n    );\n  }\n\n  // unmount to prevent memory leak when user exits store\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  // * to update state *\n  addFish = fish => {\n    // 1: take a copy of the existing state\n    const fishes = { ...this.state.fishes }; // object spread, take a copy\n    // 2: add our new fish to the fishes var\n    fishes[`fish${Date.now()}`] = fish;\n    // 3: set the new fishes object to state\n    this.setState({\n      // take our copied old fishes plus our new fish and overwrite the existing state\n      // so if they are displayed anywhere on the page they will show up\n      fishes: fishes\n    });\n  };\n\n  updateFish = (key, updatedFish) => {\n    // 1. Take a copy of the current state\n    const fishes = { ...this.state.fishes };\n    // 2. Update that state\n    fishes[key] = updatedFish;\n    // 3. Set that to state\n    this.setState({ fishes: fishes });\n  };\n\n  deleteFish = key => {\n    // 1. take a copy of state\n    const fishes = { ...this.state.fishes };\n    // 2. remove an item from state\n    fishes[key] = null;\n    // 3. update state\n    this.setState({ fishes: fishes });\n  };\n\n  //  if a function updates the state, it needs to be where the state is\n  loadSampleFishes = () => {\n    this.setState({ fishes: sampleFishes });\n  };\n\n  addToOrder = key => {\n    // 1. take a copy of state\n    const order = { ...this.state.order };\n    // 2. either add to the order or update the number in the order\n    order[key] = order[key] + 1 || 1; // if it exists addd 1, if not set it to 1\n    // 3. call setState to update our state object\n    this.setState({ order: order });\n  };\n\n  removeFromOrder = key => {\n    // 1. take a copy of state\n    const order = { ...this.state.order };\n    // 2. remove that item from order\n    delete order[key];\n    // 3. call setState to update our state object\n    this.setState({ order: order });\n  };\n\n  render() {\n    return (\n      <div className=\"catch-of-the-day\">\n        <div className=\"menu\">\n          <Header tagline=\"fresh seafood\"></Header>\n          <ul className=\"fishes\">\n            {/* take the objects from the state */}\n            {/* give a special key so that react identifies it faster */}\n            {/* details are info we are passing about each fish */}\n            {Object.keys(this.state.fishes).map(key => (\n              <Fish\n                key={key}\n                index={key} // if you need access to the key you have to pass it as something other than key\n                details={this.state.fishes[key]}\n                addToOrder={this.addToOrder}\n              >\n                {key}\n              </Fish>\n            ))}\n          </ul>\n        </div>\n        <Order\n          fishes={this.state.fishes}\n          order={this.state.order}\n          removeFromOrder={this.removeFromOrder}\n        ></Order>\n        <Inventory\n          addFish={this.addFish}\n          updateFish={this.updateFish}\n          deleteFish={this.deleteFish}\n          loadSampleFishes={this.loadSampleFishes}\n          fishes={this.state.fishes}\n          storeId={this.props.match.params.storeId}\n        ></Inventory>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\n\nconst NotFound = () => (\n  <div>\n    <h2>404 Not found</h2>\n  </div>\n);\n\nexport default NotFound;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport StorePicker from \"./StorePicker\";\nimport App from \"./App\";\nimport NotFound from \"./NotFound\";\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={StorePicker}></Route>\n      <Route path=\"/store/:storeId\" component={App}></Route>\n      <Route component={NotFound}></Route>\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Router;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport \"./css/style.css\";\nimport Router from \"./components/Router\";\n\nrender(<Router />, document.querySelector(\"#main\"));\n"],"sourceRoot":""}